noStroke();
var t = 0;// time
var y = 0;// how high the ball is, where 0 is on the ground

var ball = function(x,y,h){
    this.x=200;
    this.y=200;
    this.h=40;
};
ball.prototype.draw= function() {
    y = -0.04*t*t + 4.0*t;// y follows the path of a parabola with respect to t!
    // since y is a positive height, we need to flip it
    // to look right on the inverted coordinate plane
    var newY = 341 - 1.5*y;
    fill(71, 117, 255);
    ellipse(this.x, newY, this.h, this.h);
};

ball.prototype.control=function(){
   if (keyIsPressed && keyCode === LEFT) {
       this.x-=2;
   }
   if (keyIsPressed && keyCode === RIGHT) {
       this.x+=2;
   }
};

//Method to check for platform collision 
ball.prototype.checkForPlatform = function(platform) {
    if ((platform.x >= this.x && platform.x <= (this.x + 40)) &&
        (platform.y >= this.y && platform.y <= (this.y + 40))) {
        platform.y = 0;
        this.platform++;
    }
};

var Platform = function(x, y) {
    this.x = x;
    this.y = y;
};

Platform.prototype.draw = function() {
    fill(89, 71, 0);
    rectMode(CENTER);
    rect(this.x, this.y, 68, 4);
};

var Ball=new ball();

var platform = [];
for (var i = 0; i < 10; i++) {  
    platform.push(new Platform(random(10, 350), i * 40));
}

var draw = function() {
    background(176, 212, 255);
    Ball.draw();
    fill(130, 79, 43);
    rectMode(CORNER);
    rect(0, height*0.97, width, height*0.10);
    for (var i = 0; i < platform.length; i++) {
        platform[i].draw();
        Ball.checkForPlatform(platform[i]);
        platform[i].x -= 1;
    }
    Ball.control();
    if (y < 0) { // if y becomes negative, the ball has hit the ground
        t = 0;// reset t to make it "bounce" up again
    }
    t += 2.5; //how fast ball is moving 
};
